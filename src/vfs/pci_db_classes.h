case 0x000000: pci->class_ = "Any device except for VGA-Compatible devices "; break;
case 0x000100: pci->class_ = "VGA-Compatible Device "; break;
case 0x010000: pci->class_ = "SCSI Bus Controller "; break;
case 0x010200: pci->class_ = "Floppy Disk Controller "; break;
case 0x010300: pci->class_ = "IPI Bus Controller "; break;
case 0x010400: pci->class_ = "RAID Controller "; break;
case 0x010520: pci->class_ = "ATA Controller (Single DMA) "; break;
case 0x010530: pci->class_ = "ATA Controller (Chained DMA) "; break;
case 0x010600: pci->class_ = "Serial ATA (Vendor Specific Interface) "; break;
case 0x010601: pci->class_ = "Serial ATA (AHCI 1.0) "; break;
case 0x010700: pci->class_ = "Serial Attached SCSI (SAS) "; break;
case 0x018000: pci->class_ = "Other Mass Storage Controller "; break;
case 0x020000: pci->class_ = "Ethernet Controller "; break;
case 0x020100: pci->class_ = "Token Ring Controller "; break;
case 0x020200: pci->class_ = "FDDI Controller "; break;
case 0x020300: pci->class_ = "ATM Controller "; break;
case 0x020400: pci->class_ = "ISDN Controller "; break;
case 0x020500: pci->class_ = "WorldFip Controller "; break;
case 0x028000: pci->class_ = "Other Network Controller "; break;
case 0x030000: pci->class_ = "VGA-Compatible Controller "; break;
case 0x030001: pci->class_ = "8512-Compatible Controller "; break;
case 0x030100: pci->class_ = "XGA Controller "; break;
case 0x030200: pci->class_ = "3D Controller (Not VGA-Compatible) "; break;
case 0x038000: pci->class_ = "Other Display Controller "; break;
case 0x040000: pci->class_ = "Video Device "; break;
case 0x040100: pci->class_ = "Audio Device "; break;
case 0x040200: pci->class_ = "Computer Telephony Device "; break;
case 0x048000: pci->class_ = "Other Multimedia Device "; break;
case 0x050000: pci->class_ = "RAM Controller "; break;
case 0x050100: pci->class_ = "Flash Controller "; break;
case 0x058000: pci->class_ = "Other Memory Controller "; break;
case 0x060000: pci->class_ = "Host Bridge "; break;
case 0x060100: pci->class_ = "ISA Bridge "; break;
case 0x060200: pci->class_ = "EISA Bridge "; break;
case 0x060300: pci->class_ = "MCA Bridge "; break;
case 0x060400: pci->class_ = "PCI-to-PCI Bridge "; break;
case 0x060401: pci->class_ = "PCI-to-PCI Bridge (Subtractive Decode) "; break;
case 0x060500: pci->class_ = "PCMCIA Bridge "; break;
case 0x060600: pci->class_ = "NuBus Bridge "; break;
case 0x060700: pci->class_ = "CardBus Bridge "; break;
case 0x060940: pci->class_ = "PCI-to-PCI Bridge (Semi-Transparent, Primary) "; break;
case 0x060980: pci->class_ = "PCI-to-PCI Bridge (Semi-Transparent, Secondary) "; break;
case 0x060A00: pci->class_ = "InfiniBrand-to-PCI Host Bridge "; break;
case 0x068000: pci->class_ = "Other Bridge Device "; break;
case 0x070000: pci->class_ = "Generic XT-Compatible Serial Controller "; break;
case 0x070001: pci->class_ = "16450-Compatible Serial Controller "; break;
case 0x070002: pci->class_ = "16550-Compatible Serial Controller "; break;
case 0x070003: pci->class_ = "16650-Compatible Serial Controller "; break;
case 0x070004: pci->class_ = "16750-Compatible Serial Controller "; break;
case 0x070005: pci->class_ = "16850-Compatible Serial Controller "; break;
case 0x070006: pci->class_ = "16950-Compatible Serial Controller "; break;
case 0x070100: pci->class_ = "Parallel Port "; break;
case 0x070101: pci->class_ = "Bi-Directional Parallel Port "; break;
case 0x070102: pci->class_ = "ECP 1.X Compliant Parallel Port "; break;
case 0x070103: pci->class_ = "IEEE 1284 Controller "; break;
case 0x0701FE: pci->class_ = "IEEE 1284 Target Device "; break;
case 0x070200: pci->class_ = "Multiport Serial Controller "; break;
case 0x070300: pci->class_ = "Generic Modem "; break;
case 0x070301: pci->class_ = "Hayes Compatible Modem (16450-Compatible Interface) "; break;
case 0x070302: pci->class_ = "Hayes Compatible Modem (16550-Compatible Interface) "; break;
case 0x070303: pci->class_ = "Hayes Compatible Modem (16650-Compatible Interface) "; break;
case 0x070304: pci->class_ = "Hayes Compatible Modem (16750-Compatible Interface) "; break;
case 0x070400: pci->class_ = "IEEE 488.1/2 (GPIB) Controller "; break;
case 0x070500: pci->class_ = "Smart Card "; break;
case 0x078000: pci->class_ = "Other Communications Device "; break;
case 0x080000: pci->class_ = "Generic 8259 PIC "; break;
case 0x080001: pci->class_ = "ISA PIC "; break;
case 0x080002: pci->class_ = "EISA PIC "; break;
case 0x080010: pci->class_ = "I/O APIC Interrupt Controller "; break;
case 0x080020: pci->class_ = "I/O(x) APIC Interrupt Controller "; break;
case 0x080100: pci->class_ = "Generic 8237 DMA Controller "; break;
case 0x080101: pci->class_ = "ISA DMA Controller "; break;
case 0x080102: pci->class_ = "EISA DMA Controller "; break;
case 0x080200: pci->class_ = "Generic 8254 System Timer "; break;
case 0x080201: pci->class_ = "ISA System Timer "; break;
case 0x080202: pci->class_ = "EISA System Timer "; break;
case 0x080300: pci->class_ = "Generic RTC Controller "; break;
case 0x080301: pci->class_ = "ISA RTC Controller "; break;
case 0x080400: pci->class_ = "Generic PCI Hot-Plug Controller "; break;
case 0x088000: pci->class_ = "Other System Peripheral "; break;
case 0x090000: pci->class_ = "Keyboard Controller "; break;
case 0x090100: pci->class_ = "Digitizer "; break;
case 0x090200: pci->class_ = "Mouse Controller "; break;
case 0x090300: pci->class_ = "Scanner Controller "; break;
case 0x090400: pci->class_ = "Gameport Controller (Generic) "; break;
case 0x090410: pci->class_ = "Gameport Contrlller (Legacy) "; break;
case 0x098000: pci->class_ = "Other Input Controller "; break;
case 0x0A0000: pci->class_ = "Generic Docking Station "; break;
case 0x0A8000: pci->class_ = "Other Docking Station "; break;
case 0x0B0000: pci->class_ = "386 Processor "; break;
case 0x0B0100: pci->class_ = "486 Processor "; break;
case 0x0B0200: pci->class_ = "Pentium Processor "; break;
case 0x0B1000: pci->class_ = "Alpha Processor "; break;
case 0x0B2000: pci->class_ = "PowerPC Processor "; break;
case 0x0B3000: pci->class_ = "MIPS Processor "; break;
case 0x0B4000: pci->class_ = "Co-Processor "; break;
case 0x0C0000: pci->class_ = "IEEE 1394 Controller (FireWire) "; break;
case 0x0C0010: pci->class_ = "IEEE 1394 Controller (1394 OpenHCI Spec) "; break;
case 0x0C0100: pci->class_ = "ACCESS.bus "; break;
case 0x0C0200: pci->class_ = "SSA "; break;
case 0x0C0300: pci->class_ = "USB (Universal Host Controller Spec) "; break;
case 0x0C0310: pci->class_ = "USB (Open Host Controller Spec) "; break;
case 0x0C0320: pci->class_ = "USB2 Host Controller (Intel Enhanced Host Controller Interface) "; break;
case 0x0C0330: pci->class_ = "USB3 XHCI Controller "; break;
case 0x0C0380: pci->class_ = "Unspecified USB Controller "; break;
case 0x0C03FE: pci->class_ = "USB (Not Host Controller) "; break;
case 0x0C0400: pci->class_ = "Fibre Channel "; break;
case 0x0C0500: pci->class_ = "SMBus "; break;
case 0x0C0600: pci->class_ = "InfiniBand "; break;
case 0x0C0700: pci->class_ = "IPMI SMIC Interface "; break;
case 0x0C0701: pci->class_ = "IPMI Kybd Controller Style Interface "; break;
case 0x0C0702: pci->class_ = "IPMI Block Transfer Interface "; break;
case 0x0C0800: pci->class_ = "SERCOS Interface Standard (IEC 61491) "; break;
case 0x0C0900: pci->class_ = "CANbus "; break;
case 0x0D0000: pci->class_ = "iRDA Compatible Controller "; break;
case 0x0D0100: pci->class_ = "Consumer IR Controller "; break;
case 0x0D1000: pci->class_ = "RF Controller "; break;
case 0x0D1100: pci->class_ = "Bluetooth Controller "; break;
case 0x0D1200: pci->class_ = "Broadband Controller "; break;
case 0x0D2000: pci->class_ = "Ethernet Controller (802.11a) "; break;
case 0x0D2100: pci->class_ = "Ethernet Controller (802.11b) "; break;
case 0x0D8000: pci->class_ = "Other Wireless Controller "; break;
case 0x0E0000: pci->class_ = "Message FIFO "; break;
case 0x0F0100: pci->class_ = "TV Controller "; break;
case 0x0F0200: pci->class_ = "Audio Controller "; break;
case 0x0F0300: pci->class_ = "Voice Controller "; break;
case 0x0F0400: pci->class_ = "Data Controller "; break;
case 0x100000: pci->class_ = "Network and Computing Encrpytion/Decryption "; break;
case 0x101000: pci->class_ = "Entertainment Encryption/Decryption "; break;
case 0x108000: pci->class_ = "Other Encryption/Decryption "; break;
case 0x110000: pci->class_ = "DPIO Modules "; break;
case 0x110100: pci->class_ = "Performance Counters "; break;
case 0x111000: pci->class_ = "Communications Syncrhonization Plus Time and Frequency Test/Measurment "; break;
case 0x112000: pci->class_ = "Management Card "; break;
case 0x118000: pci->class_ = "Other Data Acquisition/Signal Processing Controller "; break;
